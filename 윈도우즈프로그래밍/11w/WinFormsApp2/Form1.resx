<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>